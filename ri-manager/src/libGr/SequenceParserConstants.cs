/* Generated By:CSharpCC: Do not edit this line. SequenceParserConstants.cs */
namespace de.unika.ipd.grGen.libGr.sequenceParser{
public class SequenceParserConstants {

  internal const int EOF = 0;
  internal const int EQUAL = 5;
  internal const int ASSIGN_TO = 6;
  internal const int BOR_TO = 7;
  internal const int BAND_TO = 8;
  internal const int COMMA = 9;
  internal const int DOLLAR = 10;
  internal const int DOUBLEAMPERSAND = 11;
  internal const int AMPERSAND = 12;
  internal const int DOUBLEPIPE = 13;
  internal const int PIPE = 14;
  internal const int CIRCUMFLEX = 15;
  internal const int EQUALITY = 16;
  internal const int INEQUALITY = 17;
  internal const int LOWEREQUAL = 18;
  internal const int GREATEREQUAL = 19;
  internal const int STRUCTURALEQUAL = 20;
  internal const int STAR = 21;
  internal const int PLUS = 22;
  internal const int DIV = 23;
  internal const int EXCLAMATIONMARK = 24;
  internal const int LPARENTHESIS = 25;
  internal const int RPARENTHESIS = 26;
  internal const int LBOXBRACKET = 27;
  internal const int RBOXBRACKET = 28;
  internal const int LANGLE = 29;
  internal const int RANGLE = 30;
  internal const int LLANGLE = 31;
  internal const int RRANGLE = 32;
  internal const int LBRACE = 33;
  internal const int RBRACE = 34;
  internal const int COLON = 35;
  internal const int DOUBLECOLON = 36;
  internal const int PERCENT = 37;
  internal const int QUESTIONMARK = 38;
  internal const int AT = 39;
  internal const int DEF = 40;
  internal const int TRUE = 41;
  internal const int FALSE = 42;
  internal const int NULL = 43;
  internal const int SET = 44;
  internal const int MAP = 45;
  internal const int ARRAY = 46;
  internal const int ARROW = 47;
  internal const int FOR = 48;
  internal const int IF = 49;
  internal const int IN = 50;
  internal const int DOT = 51;
  internal const int THENLEFT = 52;
  internal const int THENRIGHT = 53;
  internal const int SEMI = 54;
  internal const int DOUBLESEMI = 55;
  internal const int VISITED = 56;
  internal const int YIELD = 57;
  internal const int NUMFLOAT = 58;
  internal const int NUMDOUBLE = 59;
  internal const int EXPONENT = 60;
  internal const int NUMBER = 61;
  internal const int NUMBER_BYTE = 62;
  internal const int NUMBER_SHORT = 63;
  internal const int NUMBER_LONG = 64;
  internal const int HEXNUMBER = 65;
  internal const int HEXNUMBER_BYTE = 66;
  internal const int HEXNUMBER_SHORT = 67;
  internal const int HEXNUMBER_LONG = 68;
  internal const int DOUBLEQUOTEDTEXT = 69;
  internal const int SINGLEQUOTEDTEXT = 70;
  internal const int WORD = 71;
  internal const int ERROR = 72;

  internal const int DEFAULT = 0;

  internal readonly string[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"=\"",
    "\"=>\"",
    "\"|>\"",
    "\"&>\"",
    "\",\"",
    "\"$\"",
    "\"&&\"",
    "\"&\"",
    "\"||\"",
    "\"|\"",
    "\"^\"",
    "\"==\"",
    "\"!=\"",
    "\"<=\"",
    "\">=\"",
    "\"~~\"",
    "\"*\"",
    "\"+\"",
    "\"/\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "\"<<\"",
    "\">>\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\"::\"",
    "\"%\"",
    "\"?\"",
    "\"@\"",
    "\"def\"",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "\"set\"",
    "\"map\"",
    "\"array\"",
    "\"->\"",
    "\"for\"",
    "\"if\"",
    "\"in\"",
    "\".\"",
    "\"<;\"",
    "\";>\"",
    "\";\"",
    "\";;\"",
    "\"visited\"",
    "\"yield\"",
    "<NUMFLOAT>",
    "<NUMDOUBLE>",
    "<EXPONENT>",
    "<NUMBER>",
    "<NUMBER_BYTE>",
    "<NUMBER_SHORT>",
    "<NUMBER_LONG>",
    "<HEXNUMBER>",
    "<HEXNUMBER_BYTE>",
    "<HEXNUMBER_SHORT>",
    "<HEXNUMBER_LONG>",
    "<DOUBLEQUOTEDTEXT>",
    "<SINGLEQUOTEDTEXT>",
    "<WORD>",
    "<ERROR>",
  };

}
}
